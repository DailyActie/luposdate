/**
 * Copyright (c) 2013, Institute of Information Systems (Sven Groppe), University of Luebeck
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 * following conditions are met:
 *
 * 	- Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 * 	  disclaimer.
 * 	- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 * 	  following disclaimer in the documentation and/or other materials provided with the distribution.
 * 	- Neither the name of the University of Luebeck nor the names of its contributors may be used to endorse or promote
 * 	  products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/* Generated By:JJTree&JavaCC: Do not edit this line. CSVParserTokenManager.java */
package lupos.endpoint.client.formatreader.csv;
import java.io.*;
import java.net.URISyntaxException;
import lupos.datastructures.items.literal.Literal;
import lupos.datastructures.items.literal.LiteralFactory;
import lupos.datastructures.items.literal.TypedLiteralOriginalContent;
import lupos.datastructures.items.literal.URILiteral;
import lupos.datastructures.items.literal.LanguageTaggedLiteralOriginalLanguage;

/** Token Manager. */
public class CSVParserTokenManager implements CSVParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2L) != 0L)
            return 391;
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 15;
            return 222;
         }
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 15;
            return 79;
         }
         return -1;
      case 1:
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 1;
            return 392;
         }
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 1;
            return 393;
         }
         return -1;
      case 2:
         if ((active0 & 0xc0L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 2;
            return 392;
         }
         return -1;
      case 3:
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 3;
            return 392;
         }
         if ((active0 & 0x40L) != 0L)
            return 392;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 28);
      case 32:
         return jjStartNfaWithStates_0(0, 1, 391);
      case 44:
         return jjStopAtPos(0, 29);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x80L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x40L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 94:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 30);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x80L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(3, 6, 392);
         break;
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x80L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(4, 7, 392);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec3 = {
   0xfffffffffffffff6L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x5e00ffffffffffffL
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec5 = {
   0x0L, 0xbfff000000000000L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec6 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffff00000000ffffL
};
static final long[] jjbitVec7 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffffffffL
};
static final long[] jjbitVec8 = {
   0x0L, 0x0L, 0x80000000000000L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec9 = {
   0xffffffffffffffffL, 0xbfffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 391;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffef7fffffdbffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddStates(0, 8);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(9, 15);
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(370, 381);
                  else if (curChar == 58)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAddStates(16, 22);
                  }
                  else if (curChar == 40)
                     jjCheckNAddTwoStates(48, 49);
                  else if (curChar == 35)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(23, 25);
                  }
                  break;
               case 392:
                  if ((0xffffef7fffffdbffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  else if (curChar == 58)
                     jjCheckNAddStates(16, 22);
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  else if (curChar == 58)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 79:
                  if ((0xffffef7fffffdbffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  else if (curChar == 58)
                     jjCheckNAddStates(16, 22);
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  else if (curChar == 58)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 222:
                  if ((0xffffef7fffffdbffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  else if (curChar == 58)
                     jjCheckNAddStates(16, 22);
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  else if (curChar == 58)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 393:
                  if ((0xffffef7fffffdbffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  else if (curChar == 58)
                     jjCheckNAddStates(16, 22);
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  else if (curChar == 58)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 391:
               case 44:
                  if ((0xffffef7fffffdbffL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(44, 45);
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(23, 25);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 3)
                     kind = 3;
                  break;
               case 3:
                  if (curChar == 10 && kind > 3)
                     kind = 3;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar != 58)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0xffffefbeffffdbffL & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjCheckNAdd(7);
                  break;
               case 35:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 37:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if ((0x3ff200000000000L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 42:
                  if (curChar == 45)
                     jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 46:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(44, 45);
                  break;
               case 47:
                  if (curChar == 40)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 48:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 41 && kind > 16)
                     kind = 16;
                  break;
               case 51:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(26, 27);
                  break;
               case 92:
                  if (curChar == 51)
                     jjCheckNAdd(6);
                  break;
               case 93:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 115:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 122:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 129:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 136:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 205:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 213:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 241:
                  if (curChar == 48)
                     jjCheckNAdd(6);
                  break;
               case 242:
                  if (curChar == 55)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 261:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 271:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 280:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 281:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 57)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 286:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 57)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 292:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if (curChar == 58 && kind > 5)
                     kind = 5;
                  break;
               case 294:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  break;
               case 295:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if (curChar == 58)
                     jjCheckNAddStates(16, 22);
                  break;
               case 297:
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 298:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 299:
                  if (curChar == 58)
                     jjCheckNAddStates(28, 36);
                  break;
               case 301:
                  if ((0x3ff200000000000L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 302:
                  if (curChar == 37)
                     jjAddStates(37, 38);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 305:
                  if (curChar == 2)
                     jjCheckNAddStates(39, 66);
                  break;
               case 306:
                  if (curChar == 53)
                     jjCheckNAddStates(28, 36);
                  break;
               case 307:
                  if (curChar == 4)
                     jjAddStates(67, 68);
                  break;
               case 308:
                  if (curChar == 48)
                     jjCheckNAddStates(28, 36);
                  break;
               case 309:
                  if (curChar == 3)
                     jjCheckNAddStates(69, 76);
                  break;
               case 311:
                  if (curChar == 7)
                     jjCheckNAddTwoStates(312, 315);
                  break;
               case 313:
                  if (curChar == 5)
                     jjCheckNAddTwoStates(310, 314);
                  break;
               case 322:
                  if (curChar == 48 && kind > 8)
                     kind = 8;
                  break;
               case 323:
                  if (curChar == 51)
                     jjCheckNAddStates(28, 36);
                  break;
               case 325:
                  if (curChar == 57)
                     jjCheckNAddStates(28, 36);
                  break;
               case 326:
                  if (curChar == 56)
                     jjCheckNAddStates(28, 36);
                  break;
               case 327:
                  if (curChar == 55)
                     jjCheckNAddStates(28, 36);
                  break;
               case 328:
                  if (curChar == 54)
                     jjCheckNAddStates(28, 36);
                  break;
               case 329:
                  if (curChar == 52)
                     jjCheckNAddStates(28, 36);
                  break;
               case 330:
                  if (curChar == 49)
                     jjCheckNAddStates(28, 36);
                  break;
               case 331:
                  if (curChar == 53 && kind > 8)
                     kind = 8;
                  break;
               case 332:
                  if (curChar == 51 && kind > 8)
                     kind = 8;
                  break;
               case 334:
                  if (curChar == 57 && kind > 8)
                     kind = 8;
                  break;
               case 335:
                  if (curChar == 56 && kind > 8)
                     kind = 8;
                  break;
               case 336:
                  if (curChar == 55 && kind > 8)
                     kind = 8;
                  break;
               case 337:
                  if (curChar == 54 && kind > 8)
                     kind = 8;
                  break;
               case 338:
                  if (curChar == 52 && kind > 8)
                     kind = 8;
                  break;
               case 339:
                  if (curChar == 49 && kind > 8)
                     kind = 8;
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 342:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 345:
                  if (curChar != 48)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 346:
                  if (curChar == 4)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 348:
                  if (curChar == 7)
                     jjCheckNAdd(347);
                  break;
               case 350:
                  if (curChar == 5)
                     jjCheckNAdd(349);
                  break;
               case 351:
                  if (curChar == 2)
                     jjCheckNAddStates(77, 90);
                  break;
               case 352:
                  if (curChar != 53)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 353:
                  if (curChar != 51)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 357:
                  if (curChar != 57)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 358:
                  if (curChar != 56)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 359:
                  if (curChar != 55)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 360:
                  if (curChar != 54)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 361:
                  if (curChar != 52)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 362:
                  if (curChar != 49)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 364:
                  if (curChar == 3)
                     jjCheckNAddStates(91, 94);
                  break;
               case 365:
                  if (curChar != 58)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAddStates(16, 22);
                  break;
               case 366:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(9, 15);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(367);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(368, 369);
                  break;
               case 369:
                  if (curChar == 46)
                     jjCheckNAdd(370);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(370);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(371, 372);
                  break;
               case 372:
                  if (curChar != 46)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(373);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(373);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(374, 375);
                  break;
               case 375:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(376, 377);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(376, 377);
                  break;
               case 378:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(379);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(379);
                  break;
               case 380:
                  if (curChar == 46)
                     jjCheckNAdd(381);
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(381, 382);
                  break;
               case 383:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(384);
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(384);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(385, 386);
                  break;
               case 387:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(388);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(388);
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(0, 8);
                  break;
               case 390:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(370, 381);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(95, 100);
                  else if (curChar == 91)
                     jjAddStates(26, 27);
                  else if (curChar == 64)
                     jjCheckNAdd(41);
                  else if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 35;
                  if ((0x400000004000000L & l) != 0L)
                     jjAddStates(101, 102);
                  else if ((0x100000001000000L & l) != 0L)
                     jjAddStates(103, 105);
                  else if ((0x40000000400000L & l) != 0L)
                     jjAddStates(106, 107);
                  else if ((0x10000000100000L & l) != 0L)
                     jjCheckNAddStates(108, 115);
                  else if ((0x8000000080000L & l) != 0L)
                     jjAddStates(116, 123);
                  else if ((0x1000000010000L & l) != 0L)
                     jjAddStates(124, 127);
                  else if ((0x400000004000L & l) != 0L)
                     jjAddStates(128, 130);
                  else if ((0x200000002000L & l) != 0L)
                     jjAddStates(131, 138);
                  else if ((0x20000000200L & l) != 0L)
                     jjCheckNAddStates(139, 149);
                  else if ((0x10000000100L & l) != 0L)
                     jjAddStates(150, 152);
                  else if ((0x8000000080L & l) != 0L)
                     jjCheckNAddTwoStates(85, 90);
                  else if ((0x4000000040L & l) != 0L)
                     jjAddStates(153, 155);
                  else if ((0x1000000010L & l) != 0L)
                     jjAddStates(156, 160);
                  else if ((0x800000008L & l) != 0L)
                     jjAddStates(161, 163);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(164, 167);
                  else if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 392:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(296);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(293);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 79:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(296);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(293);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(5);
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  else if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(78);
                  break;
               case 222:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(296);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(293);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  else if ((0x40000000400000L & l) != 0L)
                     jjCheckNAdd(6);
                  else if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(5);
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 393:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(296);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(293);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 391:
                  if ((0xffffffffafffffffL & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 1:
                  if (kind > 3)
                     kind = 3;
                  jjAddStates(23, 25);
                  break;
               case 5:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 7:
                  if ((0xefffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
               case 58:
               case 62:
               case 102:
               case 105:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 9:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 12:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(11);
                  break;
               case 13:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x8000000080000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 27:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAdd(11);
                  break;
               case 30:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x8000000080000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 32:
               case 110:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 33:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if ((0x7fffffe87fffffeL & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 39:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 40:
                  if (curChar == 64)
                     jjCheckNAdd(41);
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(41, 42);
                  break;
               case 43:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 44:
                  if ((0xffffffffafffffffL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(44, 45);
                  break;
               case 45:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(44, 45);
                  break;
               case 50:
                  if (curChar == 91)
                     jjAddStates(26, 27);
                  break;
               case 52:
                  if (curChar == 93 && kind > 18)
                     kind = 18;
                  break;
               case 53:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(164, 167);
                  break;
               case 54:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 55:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(54);
                  break;
               case 56:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 57:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 59:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
               case 172:
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 61:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(161, 163);
                  break;
               case 63:
                  if ((0x1000000010L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 64:
               case 65:
               case 145:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(63);
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(156, 160);
                  break;
               case 68:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(54);
                  break;
               case 69:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x40000000400000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 71:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(70);
                  break;
               case 72:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 73:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(72);
                  break;
               case 74:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 76:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(11);
                  break;
               case 77:
                  if ((0x4000000040L & l) != 0L)
                     jjAddStates(153, 155);
                  break;
               case 78:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 81:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 82:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
               case 95:
               case 173:
               case 194:
               case 229:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 84:
                  if ((0x8000000080L & l) != 0L)
                     jjCheckNAddTwoStates(85, 90);
                  break;
               case 85:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 86:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 87:
               case 161:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(86);
                  break;
               case 88:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if ((0x10000000100L & l) != 0L)
                     jjAddStates(150, 152);
                  break;
               case 96:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
               case 151:
               case 198:
               case 209:
               case 267:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 98:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAddStates(139, 149);
                  break;
               case 101:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(78);
                  break;
               case 103:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 106:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAdd(85);
                  break;
               case 108:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
               case 277:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 111:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
               case 202:
               case 258:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 113:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 120:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 123:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 127:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 130:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x400000004000000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 134:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x200000002000L & l) != 0L)
                     jjAddStates(131, 138);
                  break;
               case 141:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(85);
                  break;
               case 142:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 146:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(104);
                  break;
               case 147:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 150:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 152:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x2000000020000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 155:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 157:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 162:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x400000004000L & l) != 0L)
                     jjAddStates(128, 130);
                  break;
               case 170:
               case 217:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 171:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 174:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x1000000010000L & l) != 0L)
                     jjAddStates(124, 127);
                  break;
               case 176:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 177:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(31);
                  break;
               case 178:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x80000000800L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 180:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x4000000040000L & l) != 0L)
                     jjCheckNAdd(85);
                  break;
               case 183:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(116, 123);
                  break;
               case 189:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 190:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 195:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 199:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 201:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 206:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 210:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 218:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAddStates(108, 115);
                  break;
               case 221:
                  if ((0x8000000080L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 223:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 224:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(72);
                  break;
               case 226:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 230:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x8000000080L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 232:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 245:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x40000000400000L & l) != 0L)
                     jjAddStates(106, 107);
                  break;
               case 247:
                  if ((0x20000000200L & l) != 0L)
                     jjCheckNAdd(6);
                  break;
               case 248:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(78);
                  break;
               case 252:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x100000001000000L & l) != 0L)
                     jjAddStates(103, 105);
                  break;
               case 259:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 262:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 268:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 272:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 278:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if ((0x400000004000000L & l) != 0L)
                     jjAddStates(101, 102);
                  break;
               case 290:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(95, 100);
                  break;
               case 291:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 292:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(293);
                  break;
               case 294:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(294, 295);
                  break;
               case 295:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(296);
                  break;
               case 297:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 298:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 300:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if ((0x7fffffe87fffffeL & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 310:
                  if ((0x4000000040L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 312:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 314:
                  if ((0x4000000040L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 315:
                  if ((0x2000000020L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 316:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 317:
                  if ((0x1000000010L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 318:
                  if ((0x400000004L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 319:
                  if ((0x200000002L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 320:
                  if ((0x1000000010L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 321:
                  if ((0x400000004L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 324:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAddStates(28, 36);
                  break;
               case 333:
                  if ((0x800000008L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 343:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 344:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 347:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 349:
                  if ((0x4000000040L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 354:
                  if ((0x800000008L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 355:
                  if ((0x400000004L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 356:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 363:
                  if ((0x1000000010L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 377:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(168, 169);
                  break;
               case 382:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(170, 171);
                  break;
               case 386:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(172, 173);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(95, 100);
                  break;
               case 392:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(291, 292);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(293);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(294, 295);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  break;
               case 79:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(291, 292);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(293);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(294, 295);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  break;
               case 222:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(291, 292);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(293);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(294, 295);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  break;
               case 393:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(291, 292);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(293);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(294, 295);
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                     jjCheckNAddTwoStates(44, 45);
                  }
                  break;
               case 391:
               case 44:
               case 46:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(44, 45);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjAddStates(23, 25);
                  break;
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 36:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAddTwoStates(37, 38);
                  break;
               case 37:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 9)
                     kind = 9;
                  break;
               case 290:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(95, 100);
                  break;
               case 291:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(291, 292);
                  break;
               case 292:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(293);
                  break;
               case 294:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(294, 295);
                  break;
               case 295:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(296);
                  break;
               case 297:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(28, 36);
                  break;
               case 298:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(28, 36);
                  break;
               case 301:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 8)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 391 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   367, 368, 369, 371, 372, 374, 375, 385, 386, 367, 368, 369, 371, 374, 380, 385, 
   297, 342, 346, 348, 350, 351, 364, 1, 2, 4, 51, 52, 298, 300, 301, 302, 
   305, 307, 309, 311, 313, 303, 340, 306, 323, 310, 324, 318, 316, 325, 326, 327, 
   328, 329, 330, 317, 312, 331, 332, 314, 333, 321, 319, 334, 335, 336, 337, 338, 
   339, 320, 315, 308, 322, 310, 316, 317, 318, 314, 319, 320, 321, 352, 353, 349, 
   354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 347, 349, 356, 363, 355, 291, 
   292, 293, 294, 295, 296, 284, 289, 266, 276, 278, 250, 256, 222, 224, 228, 230, 
   239, 240, 70, 245, 193, 196, 197, 199, 201, 208, 216, 219, 176, 178, 181, 187, 
   171, 172, 174, 144, 145, 148, 150, 153, 155, 160, 168, 101, 103, 104, 106, 108, 
   109, 111, 118, 125, 132, 139, 94, 96, 99, 79, 82, 83, 69, 71, 74, 75, 
   76, 62, 64, 66, 55, 57, 59, 60, 378, 379, 383, 384, 387, 388, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec8[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec9[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, "\12", "\54", "\136\136", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x7005bff1L, 
};
static final long[] jjtoSkip = {
   0xeL, 
};
protected JavaCharStream input_stream;
private final int[] jjrounds = new int[391];
private final int[] jjstateSet = new int[782];
protected char curChar;
/** Constructor. */
public CSVParserTokenManager(JavaCharStream stream){
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public CSVParserTokenManager(JavaCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 391; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 13 && (0x2000L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
