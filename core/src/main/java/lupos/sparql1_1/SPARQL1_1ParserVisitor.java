
/**
 * Copyright (c) 2007-2015, Institute of Information Systems (Sven Groppe and contributors of LUPOSDATE), University of Luebeck
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 * following conditions are met:
 *
 * 	- Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 * 	  disclaimer.
 * 	- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 * 	  following disclaimer in the documentation and/or other materials provided with the distribution.
 * 	- Neither the name of the University of Luebeck nor the names of its contributors may be used to endorse or promote
 * 	  products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author groppe
 * @version $Id: $Id
 */
/* Generated By:JavaCC: Do not edit this line. SPARQL1_1ParserVisitor.java Version 5.0 */
package lupos.sparql1_1;
public interface SPARQL1_1ParserVisitor
{
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.SimpleNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(SimpleNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTGroupConstraint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTGroupConstraint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTTripleSet} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTTripleSet node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAVerbType} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAVerbType node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTQuery} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTQuery node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBaseDecl} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBaseDecl node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTPrefixDecl} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTPrefixDecl node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSelectQuery} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSelectQuery node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAs} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAs node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTConstructQuery} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTConstructQuery node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDescribeQuery} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDescribeQuery node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAskQuery} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAskQuery node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDefaultGraph} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDefaultGraph node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNamedGraph} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNamedGraph node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTGroup} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTGroup node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTHaving} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTHaving node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTOrderConditions} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTOrderConditions node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAscOrder} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAscOrder node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDescOrder} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDescOrder node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLimit} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLimit node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTOffset} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTOffset node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBindings} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBindings node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTPlusNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTPlusNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTUndef} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTUndef node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLoad} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLoad node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTClear} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTClear node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDrop} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDrop node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTCreate} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTCreate node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAdd} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAdd node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMove} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMove node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTCopy} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTCopy node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTInsert} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTInsert node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDelete} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDelete node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTModify} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTModify node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDefault} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDefault node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNamed} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNamed node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAll} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAll node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTConstructTemplate} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTConstructTemplate node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTGraphConstraint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTGraphConstraint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTOptionalConstraint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTOptionalConstraint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTService} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTService node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBind} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBind node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMinus} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMinus node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTUnionConstraint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTUnionConstraint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTFilterConstraint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTFilterConstraint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTFunctionCall} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTFunctionCall node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTArguments} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTArguments node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTExpressionList} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTExpressionList node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNodeSet} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNodeSet node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTObjectList} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTObjectList node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTPathAlternative} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTPathAlternative node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTPathSequence} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTPathSequence node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTInvers} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTInvers node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTArbitraryOccurences} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTArbitraryOccurences node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTOptionalOccurence} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTOptionalOccurence node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTArbitraryOccurencesNotZero} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTArbitraryOccurencesNotZero node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNegatedPath} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNegatedPath node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTInteger} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTInteger node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBlankNodePropertyList} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBlankNodePropertyList node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTCollection} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTCollection node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTVar} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTVar node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNIL} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNIL node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTOrNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTOrNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAndNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAndNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTEqualsNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTEqualsNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNotEqualsNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNotEqualsNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLessThanNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLessThanNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTGreaterThanNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTGreaterThanNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLessThanEqualsNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLessThanEqualsNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTGreaterThanEqualsNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTGreaterThanEqualsNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTInNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTInNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNotInNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNotInNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAdditionNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAdditionNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSubtractionNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSubtractionNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMultiplicationNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMultiplicationNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDivisionNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDivisionNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNotNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNotNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMinusNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMinusNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLangFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLangFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLangMatchesFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLangMatchesFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDataTypeFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDataTypeFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBoundFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBoundFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTIriFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTIriFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTUriFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTUriFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBnodeFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBnodeFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTRandFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTRandFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTABSFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTABSFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTCeilFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTCeilFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTFloorFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTFloorFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTRoundFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTRoundFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTConcatFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTConcatFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrlenFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrlenFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTUcaseFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTUcaseFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLcaseFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLcaseFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTEncodeForUriFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTEncodeForUriFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTContainsFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTContainsFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrstartsFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrstartsFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrEndsFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrEndsFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrBeforeFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrBeforeFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrAfterFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrAfterFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTYearFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTYearFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMonthFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMonthFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDayFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDayFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTHoursFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTHoursFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMinutesFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMinutesFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSecondsFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSecondsFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTTimeZoneFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTTimeZoneFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTTzFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTTzFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNowFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNowFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTUUIDFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTUUIDFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSTRUUIDFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSTRUUIDFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTMD5FuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTMD5FuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSHA1FuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSHA1FuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSHA256FuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSHA256FuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSHA384FuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSHA384FuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSHA512FuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSHA512FuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTCoalesceFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTCoalesceFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTIfFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTIfFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrLangFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrLangFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrdtFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrdtFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSameTermFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSameTermFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTisIRIFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTisIRIFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTisURIFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTisURIFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTisBlankFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTisBlankFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTisLiteralFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTisLiteralFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTisNumericFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTisNumericFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTRegexFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTRegexFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTSubstringFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTSubstringFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStrReplaceFuncNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStrReplaceFuncNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTExists} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTExists node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTNotExists} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTNotExists node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTAggregation} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTAggregation node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTRDFLiteral} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTRDFLiteral node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTDoubleCircumflex} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTDoubleCircumflex node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTLangTag} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTLangTag node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTFloatingPoint} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTFloatingPoint node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBooleanLiteral} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBooleanLiteral node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTStringLiteral} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTStringLiteral node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTQuotedURIRef} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTQuotedURIRef node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTQName} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTQName node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTBlankNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTBlankNode node, Object data);
  /**
   * <p>visit.</p>
   *
   * @param node a {@link lupos.sparql1_1.ASTEmptyNode} object.
   * @param data a {@link java.lang.Object} object.
   * @return a {@link java.lang.Object} object.
   */
  public Object visit(ASTEmptyNode node, Object data);
}
/* JavaCC - OriginalChecksum=d20f7711ede9b2f1b8af3ce04d3ea865 (do not edit this line) */
