/* Generated By:JJTree: Do not edit this line. ASTVar.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package lupos.sparql1_1;

import lupos.datastructures.bindings.Bindings;
import lupos.engine.operators.singleinput.NotBoundException;
import lupos.engine.operators.singleinput.TypeErrorException;
import lupos.engine.operators.singleinput.ExpressionEvaluation.EvaluationVisitor;
import lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserPathVisitorStringGenerator;

public
class ASTVar extends SimpleNode {
	private String name;
  public ASTVar(int id) {
    super(id);
  }

  public ASTVar(SPARQL1_1Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
    public String accept(lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserVisitorStringGenerator visitor) {
    return visitor.visit(this);
  }

  public Object jjtAccept(SPARQL1_1ParserVisitor visitor, Object data) {
	  return visitor.visit(this, data);
  }
  
  public String accept(SPARQL1_1ParserPathVisitorStringGenerator visitor, String subject, String object){
	    return visitor.visit(this, subject, object);
  }
  
  @SuppressWarnings({ "rawtypes", "unchecked" })
  public Object accept(EvaluationVisitor visitor, Bindings b, Object data) throws NotBoundException, TypeErrorException {
	  return visitor.evaluate(this, b, data);
  }

  public String getName() {
	  return name;
  }

  public void setName(String name) {
	  this.name = name;
  }

  public String toQueryString(){
	  return "?"+getName();
  }

  @Override
  public String toString() {
	  return super.toString()+" "+name;
  }
}
/* JavaCC - OriginalChecksum=9659db53761e9cd7869a949eba52d317 (do not edit this line) */
