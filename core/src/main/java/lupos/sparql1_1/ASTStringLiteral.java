/* Generated By:JJTree: Do not edit this line. ASTStringLiteral.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package lupos.sparql1_1;

import lupos.datastructures.bindings.Bindings;
import lupos.engine.operators.singleinput.NotBoundException;
import lupos.engine.operators.singleinput.TypeErrorException;
import lupos.engine.operators.singleinput.ExpressionEvaluation.EvaluationVisitor;

public
class ASTStringLiteral extends SimpleNode {
	private String stringLiteral;
	public ASTStringLiteral(int id) {
		super(id);
	}

	public ASTStringLiteral(SPARQL1_1Parser p, int id) {
		super(p, id);
	}


	/** Accept the visitor. **/
	  public String accept(lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserVisitorStringGenerator visitor) {
    return visitor.visit(this);
  }

  public Object jjtAccept(SPARQL1_1ParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

  @SuppressWarnings({ "rawtypes", "unchecked" })
  public Object accept(EvaluationVisitor visitor, Bindings b, Object data) throws NotBoundException, TypeErrorException {
	  return visitor.evaluate(this, b, data);
  }

  public String getStringLiteral() {
	  return stringLiteral;
  }

  public void setStringLiteral(String stringLiteral) {
	  this.stringLiteral = stringLiteral;
  }

  @Override
  public String toString() {
	  // TODO Auto-generated method stub
	  return super.toString()+" "+stringLiteral;
  }
}
/* JavaCC - OriginalChecksum=496a5b63351f078fa5340ff60700826d (do not edit this line) */
