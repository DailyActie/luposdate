/**
 * Copyright (c) 2013, Institute of Information Systems (Sven Groppe), University of Luebeck
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
 * following conditions are met:
 *
 * 	- Redistributions of source code must retain the above copyright notice, this list of conditions and the following
 * 	  disclaimer.
 * 	- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 * 	  following disclaimer in the documentation and/or other materials provided with the distribution.
 * 	- Neither the name of the University of Luebeck nor the names of its contributors may be used to endorse or promote
 * 	  products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/* Generated By:JavaCC: Do not edit this line. StreamSPARQL1_1ParserTreeConstants.java Version 5.0 */
package lupos.sparql1_1;

public interface StreamSPARQL1_1ParserTreeConstants
{
  public int JJTGROUPCONSTRAINT = 0;
  public int JJTTRIPLESET = 1;
  public int JJTVOID = 2;
  public int JJTAVERBTYPE = 3;
  public int JJTQUERY = 4;
  public int JJTBASEDECL = 5;
  public int JJTPREFIXDECL = 6;
  public int JJTSELECTQUERY = 7;
  public int JJTAS = 8;
  public int JJTCONSTRUCTQUERY = 9;
  public int JJTDESCRIBEQUERY = 10;
  public int JJTASKQUERY = 11;
  public int JJTSTREAM = 12;
  public int JJTWINDOW = 13;
  public int JJTSTART = 14;
  public int JJTEND = 15;
  public int JJTTYPE = 16;
  public int JJTDEFAULTGRAPH = 17;
  public int JJTNAMEDGRAPH = 18;
  public int JJTGROUP = 19;
  public int JJTHAVING = 20;
  public int JJTORDERCONDITIONS = 21;
  public int JJTASCORDER = 22;
  public int JJTDESCORDER = 23;
  public int JJTLIMIT = 24;
  public int JJTOFFSET = 25;
  public int JJTBINDINGS = 26;
  public int JJTPLUSNODE = 27;
  public int JJTUNDEF = 28;
  public int JJTLOAD = 29;
  public int JJTCLEAR = 30;
  public int JJTDROP = 31;
  public int JJTCREATE = 32;
  public int JJTADD = 33;
  public int JJTMOVE = 34;
  public int JJTCOPY = 35;
  public int JJTINSERT = 36;
  public int JJTDELETE = 37;
  public int JJTMODIFY = 38;
  public int JJTDEFAULT = 39;
  public int JJTNAMED = 40;
  public int JJTALL = 41;
  public int JJTCONSTRUCTTEMPLATE = 42;
  public int JJTGRAPHCONSTRAINT = 43;
  public int JJTOPTIONALCONSTRAINT = 44;
  public int JJTSERVICE = 45;
  public int JJTBIND = 46;
  public int JJTMINUS = 47;
  public int JJTUNIONCONSTRAINT = 48;
  public int JJTFILTERCONSTRAINT = 49;
  public int JJTFUNCTIONCALL = 50;
  public int JJTARGUMENTS = 51;
  public int JJTEXPRESSIONLIST = 52;
  public int JJTNODESET = 53;
  public int JJTOBJECTLIST = 54;
  public int JJTPATHALTERNATIVE = 55;
  public int JJTPATHSEQUENCE = 56;
  public int JJTINVERS = 57;
  public int JJTARBITRARYOCCURENCES = 58;
  public int JJTOPTIONALOCCURENCE = 59;
  public int JJTARBITRARYOCCURENCESNOTZERO = 60;
  public int JJTNEGATEDPATH = 61;
  public int JJTINTEGER = 62;
  public int JJTBLANKNODEPROPERTYLIST = 63;
  public int JJTCOLLECTION = 64;
  public int JJTVAR = 65;
  public int JJTNIL = 66;
  public int JJTORNODE = 67;
  public int JJTANDNODE = 68;
  public int JJTEQUALSNODE = 69;
  public int JJTNOTEQUALSNODE = 70;
  public int JJTLESSTHANNODE = 71;
  public int JJTGREATERTHANNODE = 72;
  public int JJTLESSTHANEQUALSNODE = 73;
  public int JJTGREATERTHANEQUALSNODE = 74;
  public int JJTINNODE = 75;
  public int JJTNOTINNODE = 76;
  public int JJTADDITIONNODE = 77;
  public int JJTSUBTRACTIONNODE = 78;
  public int JJTMULTIPLICATIONNODE = 79;
  public int JJTDIVISIONNODE = 80;
  public int JJTNOTNODE = 81;
  public int JJTMINUSNODE = 82;
  public int JJTSTRFUNCNODE = 83;
  public int JJTLANGFUNCNODE = 84;
  public int JJTLANGMATCHESFUNCNODE = 85;
  public int JJTDATATYPEFUNCNODE = 86;
  public int JJTBOUNDFUNCNODE = 87;
  public int JJTIRIFUNCNODE = 88;
  public int JJTURIFUNCNODE = 89;
  public int JJTBNODEFUNCNODE = 90;
  public int JJTRANDFUNCNODE = 91;
  public int JJTABSFUNCNODE = 92;
  public int JJTCEILFUNCNODE = 93;
  public int JJTFLOORFUNCNODE = 94;
  public int JJTROUNDFUNCNODE = 95;
  public int JJTCONCATFUNCNODE = 96;
  public int JJTSTRLENFUNCNODE = 97;
  public int JJTUCASEFUNCNODE = 98;
  public int JJTLCASEFUNCNODE = 99;
  public int JJTENCODEFORURIFUNCNODE = 100;
  public int JJTCONTAINSFUNCNODE = 101;
  public int JJTSTRSTARTSFUNCNODE = 102;
  public int JJTSTRENDSFUNCNODE = 103;
  public int JJTSTRBEFOREFUNCNODE = 104;
  public int JJTSTRAFTERFUNCNODE = 105;
  public int JJTYEARFUNCNODE = 106;
  public int JJTMONTHFUNCNODE = 107;
  public int JJTDAYFUNCNODE = 108;
  public int JJTHOURSFUNCNODE = 109;
  public int JJTMINUTESFUNCNODE = 110;
  public int JJTSECONDSFUNCNODE = 111;
  public int JJTTIMEZONEFUNCNODE = 112;
  public int JJTTZFUNCNODE = 113;
  public int JJTNOWFUNCNODE = 114;
  public int JJTUUIDFUNCNODE = 115;
  public int JJTSTRUUIDFUNCNODE = 116;
  public int JJTMD5FUNCNODE = 117;
  public int JJTSHA1FUNCNODE = 118;
  public int JJTSHA256FUNCNODE = 119;
  public int JJTSHA384FUNCNODE = 120;
  public int JJTSHA512FUNCNODE = 121;
  public int JJTCOALESCEFUNCNODE = 122;
  public int JJTIFFUNCNODE = 123;
  public int JJTSTRLANGFUNCNODE = 124;
  public int JJTSTRDTFUNCNODE = 125;
  public int JJTSAMETERMFUNCNODE = 126;
  public int JJTISIRIFUNCNODE = 127;
  public int JJTISURIFUNCNODE = 128;
  public int JJTISBLANKFUNCNODE = 129;
  public int JJTISLITERALFUNCNODE = 130;
  public int JJTISNUMERICFUNCNODE = 131;
  public int JJTREGEXFUNCNODE = 132;
  public int JJTSUBSTRINGFUNCNODE = 133;
  public int JJTSTRREPLACEFUNCNODE = 134;
  public int JJTEXISTS = 135;
  public int JJTNOTEXISTS = 136;
  public int JJTAGGREGATION = 137;
  public int JJTRDFLITERAL = 138;
  public int JJTDOUBLECIRCUMFLEX = 139;
  public int JJTLANGTAG = 140;
  public int JJTFLOATINGPOINT = 141;
  public int JJTBOOLEANLITERAL = 142;
  public int JJTSTRINGLITERAL = 143;
  public int JJTQUOTEDURIREF = 144;
  public int JJTQNAME = 145;
  public int JJTBLANKNODE = 146;
  public int JJTEMPTYNODE = 147;


  public String[] jjtNodeName = {
    "GroupConstraint",
    "TripleSet",
    "void",
    "AVerbType",
    "Query",
    "BaseDecl",
    "PrefixDecl",
    "SelectQuery",
    "As",
    "ConstructQuery",
    "DescribeQuery",
    "AskQuery",
    "Stream",
    "Window",
    "Start",
    "End",
    "Type",
    "DefaultGraph",
    "NamedGraph",
    "Group",
    "Having",
    "OrderConditions",
    "AscOrder",
    "DescOrder",
    "Limit",
    "Offset",
    "Bindings",
    "PlusNode",
    "Undef",
    "Load",
    "Clear",
    "Drop",
    "Create",
    "Add",
    "Move",
    "Copy",
    "Insert",
    "Delete",
    "Modify",
    "Default",
    "Named",
    "All",
    "ConstructTemplate",
    "GraphConstraint",
    "OptionalConstraint",
    "Service",
    "Bind",
    "Minus",
    "UnionConstraint",
    "FilterConstraint",
    "FunctionCall",
    "Arguments",
    "ExpressionList",
    "NodeSet",
    "ObjectList",
    "PathAlternative",
    "PathSequence",
    "Invers",
    "ArbitraryOccurences",
    "OptionalOccurence",
    "ArbitraryOccurencesNotZero",
    "NegatedPath",
    "Integer",
    "BlankNodePropertyList",
    "Collection",
    "Var",
    "NIL",
    "OrNode",
    "AndNode",
    "EqualsNode",
    "NotEqualsNode",
    "LessThanNode",
    "GreaterThanNode",
    "LessThanEqualsNode",
    "GreaterThanEqualsNode",
    "InNode",
    "NotInNode",
    "AdditionNode",
    "SubtractionNode",
    "MultiplicationNode",
    "DivisionNode",
    "NotNode",
    "MinusNode",
    "StrFuncNode",
    "LangFuncNode",
    "LangMatchesFuncNode",
    "DataTypeFuncNode",
    "BoundFuncNode",
    "IriFuncNode",
    "UriFuncNode",
    "BnodeFuncNode",
    "RandFuncNode",
    "ABSFuncNode",
    "CeilFuncNode",
    "FloorFuncNode",
    "RoundFuncNode",
    "ConcatFuncNode",
    "StrlenFuncNode",
    "UcaseFuncNode",
    "LcaseFuncNode",
    "EncodeForUriFuncNode",
    "ContainsFuncNode",
    "StrstartsFuncNode",
    "StrEndsFuncNode",
    "StrBeforeFuncNode",
    "StrAfterFuncNode",
    "YearFuncNode",
    "MonthFuncNode",
    "DayFuncNode",
    "HoursFuncNode",
    "MinutesFuncNode",
    "SecondsFuncNode",
    "TimeZoneFuncNode",
    "TzFuncNode",
    "NowFuncNode",
    "UUIDFuncNode",
    "STRUUIDFuncNode",
    "MD5FuncNode",
    "SHA1FuncNode",
    "SHA256FuncNode",
    "SHA384FuncNode",
    "SHA512FuncNode",
    "CoalesceFuncNode",
    "IfFuncNode",
    "StrLangFuncNode",
    "StrdtFuncNode",
    "SameTermFuncNode",
    "isIRIFuncNode",
    "isURIFuncNode",
    "isBlankFuncNode",
    "isLiteralFuncNode",
    "isNumericFuncNode",
    "RegexFuncNode",
    "SubstringFuncNode",
    "StrReplaceFuncNode",
    "Exists",
    "NotExists",
    "Aggregation",
    "RDFLiteral",
    "DoubleCircumflex",
    "LangTag",
    "FloatingPoint",
    "BooleanLiteral",
    "StringLiteral",
    "QuotedURIRef",
    "QName",
    "BlankNode",
    "EmptyNode",
  };
}
/* JavaCC - OriginalChecksum=7799d2b139f4a79e052f391cca7e8546 (do not edit this line) */
