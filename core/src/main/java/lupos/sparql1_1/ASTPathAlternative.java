/* Generated By:JJTree: Do not edit this line. ASTPathAlternative.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package lupos.sparql1_1;

import lupos.datastructures.items.Item;
import lupos.datastructures.items.Variable;
import lupos.engine.operators.BasicOperator;
import lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserPathVisitorStringGenerator;
import lupos.sparql1_1.operatorgraph.SPARQL1_1OperatorgraphGeneratorVisitor;
import lupos.sparql1_1.operatorgraph.helper.OperatorConnection;

public class ASTPathAlternative extends SimpleNode {
	public ASTPathAlternative(int id) {
		super(id);
	}

	public ASTPathAlternative(SPARQL1_1Parser p, int id) {
		super(p, id);
	}


	/** Accept the visitor. **/
	public String accept(lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserVisitorStringGenerator visitor) {
		return visitor.visit(this);
	}

	public BasicOperator accept(SPARQL1_1OperatorgraphGeneratorVisitor visitor, OperatorConnection connection, Item graphConstraint, Variable subject, Variable object, Node subjectNode, Node objectNode) {
		return visitor.visit(this, connection, graphConstraint, subject, object, subjectNode, objectNode);
	}


	public Object jjtAccept(SPARQL1_1ParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public String accept(SPARQL1_1ParserPathVisitorStringGenerator visitor, String subject, String object){
		return visitor.visit(this, subject, object);
	}
}
/* JavaCC - OriginalChecksum=675f6f1746fda37da1da3758e7b0bc73 (do not edit this line) */
