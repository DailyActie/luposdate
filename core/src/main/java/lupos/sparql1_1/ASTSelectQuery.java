/* Generated By:JJTree: Do not edit this line. ASTSelectClause.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package lupos.sparql1_1;

import lupos.datastructures.items.Item;
import lupos.sparql1_1.operatorgraph.SPARQL1_1OperatorgraphGeneratorVisitor;
import lupos.sparql1_1.operatorgraph.helper.OperatorConnection;

public
class ASTSelectQuery extends SimpleNode {
	private boolean distinct;
	private boolean reduced;
	private boolean selectAll;
  public ASTSelectQuery(int id) {
    super(id);
  }

  public ASTSelectQuery(SPARQL1_1Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
    public String accept(lupos.optimizations.sparql2core_sparql.SPARQL1_1ParserVisitorStringGenerator visitor) {
    return visitor.visit(this);
  }

    public void accept(SPARQL1_1OperatorgraphGeneratorVisitor visitor, final OperatorConnection connection) {
  	    visitor.visit(this, connection);
    }

    public void accept(SPARQL1_1OperatorgraphGeneratorVisitor visitor, final OperatorConnection connection, Item graphConstraint){
  	    visitor.visit(this, connection, graphConstraint);
    }
        
  public Object jjtAccept(SPARQL1_1ParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

public boolean isDistinct() {
	return distinct;
}

public void setDistinct(boolean distinct) {
	this.distinct = distinct;
}

public boolean isReduced() {
	return reduced;
}

public void setReduced(boolean reduced) {
	this.reduced = reduced;
}

public boolean isSelectAll() {
	return selectAll;
}

public void setSelectAll(boolean selectAll) {
	this.selectAll = selectAll;
}
@Override
public String toString() {
	// TODO Auto-generated method stub
	return super.toString()+" disctinct :"+distinct+" reduced:"+reduced+" select all:"+selectAll;
}
}
/* JavaCC - OriginalChecksum=5cf67069fadfc22b59e7511780225655 (do not edit this line) */
